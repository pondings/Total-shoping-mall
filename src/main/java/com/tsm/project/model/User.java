/*
 * Created on 5 Apr 2016 ( Time 01:41:38 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.tsm.project.model;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "user"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user", schema="main" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="User.countAll", query="SELECT COUNT(x) FROM User x" )
} )
public class User implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="username", nullable=false, length=45)
    private String     username     ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="enabled")
    private Boolean    enabled      ;

    @Column(name="password", length=8)
    private String     password     ;

    @Column(name="id", nullable=false)
    private Integer    id           ;

	// "emp" (column "emp") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="user", targetEntity=UserRole.class)
    private List<UserRole> listOfUserRole;

    @ManyToOne
    @JoinColumn(name="emp", referencedColumnName="id")
    private EmpInfo empInfo     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public User()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUsername( String username )
    {
        this.username = username ;
    }
    public String getUsername()
    {
        return this.username;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : enabled ( bool ) 
    public void setEnabled( Boolean enabled )
    {
        this.enabled = enabled;
    }
    public Boolean getEnabled()
    {
        return this.enabled;
    }

    //--- DATABASE MAPPING : password ( bpchar ) 
    public void setPassword( String password )
    {
        this.password = password;
    }
    public String getPassword()
    {
        return this.password;
    }

    //--- DATABASE MAPPING : id ( serial ) 
    public void setId( Integer id )
    {
        this.id = id;
    }
    public Integer getId()
    {
        return this.id;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfUserRole( List<UserRole> listOfUserRole )
    {
        this.listOfUserRole = listOfUserRole;
    }
    public List<UserRole> getListOfUserRole()
    {
        return this.listOfUserRole;
    }

    public void setEmpInfo( EmpInfo empInfo )
    {
        this.empInfo = empInfo;
    }
    public EmpInfo getEmpInfo()
    {
        return this.empInfo;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(username);
        sb.append("]:"); 
        sb.append(enabled);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(id);
        return sb.toString(); 
    } 

}