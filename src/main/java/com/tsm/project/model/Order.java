/*
 * Created on 5 Apr 2016 ( Time 22:44:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.tsm.project.model;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "order"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="order", schema="main" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Order.countAll", query="SELECT COUNT(x) FROM Order x" )
} )
public class Order implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="order_net")
    private Integer    orderNet     ;

    @Column(name="order_remark", length=100)
    private String     orderRemark  ;

    @Column(name="status")
    private Boolean    status       ;

    @Column(name="order_code", length=10)
    private String     orderCode    ;

    @Temporal(TemporalType.DATE)
    @Column(name="order_date")
    private Date       orderDate    ;

	// "custId" (column "cust_id") is not defined by itself because used as FK in a link 
	// "empId" (column "emp_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="emp_id", referencedColumnName="id")
    private EmpInfo empInfo     ;

    @OneToMany(mappedBy="order", targetEntity=SubOrder.class)
    private List<SubOrder> listOfSubOrder;

    @ManyToOne
    @JoinColumn(name="cust_id", referencedColumnName="id")
    private Customer customer    ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Order()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id )
    {
        this.id = id ;
    }
    public Integer getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : order_net ( int4 ) 
    public void setOrderNet( Integer orderNet )
    {
        this.orderNet = orderNet;
    }
    public Integer getOrderNet()
    {
        return this.orderNet;
    }

    //--- DATABASE MAPPING : order_remark ( bpchar ) 
    public void setOrderRemark( String orderRemark )
    {
        this.orderRemark = orderRemark;
    }
    public String getOrderRemark()
    {
        return this.orderRemark;
    }

    //--- DATABASE MAPPING : status ( bool ) 
    public void setStatus( Boolean status )
    {
        this.status = status;
    }
    public Boolean getStatus()
    {
        return this.status;
    }

    //--- DATABASE MAPPING : order_code ( bpchar ) 
    public void setOrderCode( String orderCode )
    {
        this.orderCode = orderCode;
    }
    public String getOrderCode()
    {
        return this.orderCode;
    }

    //--- DATABASE MAPPING : order_date ( date ) 
    public void setOrderDate( Date orderDate )
    {
        this.orderDate = orderDate;
    }
    public Date getOrderDate()
    {
        return this.orderDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setEmpInfo( EmpInfo empInfo )
    {
        this.empInfo = empInfo;
    }
    public EmpInfo getEmpInfo()
    {
        return this.empInfo;
    }

    public void setListOfSubOrder( List<SubOrder> listOfSubOrder )
    {
        this.listOfSubOrder = listOfSubOrder;
    }
    public List<SubOrder> getListOfSubOrder()
    {
        return this.listOfSubOrder;
    }

    public void setCustomer( Customer customer )
    {
        this.customer = customer;
    }
    public Customer getCustomer()
    {
        return this.customer;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(orderNet);
        sb.append("|");
        sb.append(orderRemark);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(orderCode);
        sb.append("|");
        sb.append(orderDate);
        return sb.toString(); 
    } 

}